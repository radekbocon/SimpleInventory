<UserControl x:Class="SimpleInventory.Wpf.Views.InventoryPageView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:models="clr-namespace:SimpleInventory.Core.Models;assembly=SimpleInventory.Core"
             xmlns:vm="clr-namespace:SimpleInventory.Wpf.ViewModels"
             xmlns:local="clr-namespace:SimpleInventory.Wpf.Views"
             xmlns:converters="clr-namespace:SimpleInventory.Wpf.Converters"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:sys="clr-namespace:System;assembly=mscorlib" 
             xmlns:controls="clr-namespace:SimpleInventory.Wpf.Controls"
             mc:Ignorable="d" 
             Style="{DynamicResource Page}"
             d:DesignHeight="450" d:DesignWidth="800">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadInventoryCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <UserControl.Resources>
        <converters:SelectedToVisibilityConverter x:Key="SelectedItemToVis"/>
        <converters:BooleanToVisibilityConverter x:Key="BoolToVis"/>
        <sys:Boolean x:Key="InvertConverter">true</sys:Boolean>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="20"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="10"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="50"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="20"/>
        </Grid.RowDefinitions>

        <Border
            Grid.Row="2"
            Grid.Column="1"
            Grid.ColumnSpan="1"
            Grid.RowSpan="2"
            CornerRadius="5"
            BorderBrush="{DynamicResource Brush.Text.Foreground.1}"
            BorderThickness="1"
            Panel.ZIndex="-1"
            Background="{DynamicResource Brush.Border.Background.3}"/>

        <StackPanel
            Orientation="Horizontal"
            Grid.Column="1"
            Grid.Row="1">
            <Image 
                Source="{StaticResource InventoryIcon}"
                
                Margin="5"
                Width="25"
                Height="25"/>
            <Label 
                Foreground="{DynamicResource Brush.Text.Foreground.3}"
                Content="{Binding Name}"
                FontSize="20"/>
        </StackPanel>

        <StackPanel 
            Margin="10 10 0 10"
            Orientation="Horizontal"
            Grid.Column="1"
            Grid.Row="2">
            <controls:SearchBox
                PlaceholderText="Type to search..."
                SearchText="{Binding SearchText, UpdateSourceTrigger=PropertyChanged, Mode=OneWayToSource}"
                FontSize="14"
                Margin="0 0 5 0"
                Width="150"/>
            <Button 
                Margin="0 0 5 0"
                Content="Receiving"
                Style="{StaticResource DarkButton}"
                Command="{Binding ReceiveCommand}"/>
            <Button 
                Margin="0 0 5 0"
                Content="Add New Item"
                Style="{StaticResource DarkButton}"
                Command="{Binding AddNewItemCommand}"/>
        </StackPanel>

        <controls:RowShimmer 
            Margin="0 45 0 0"
            Panel.ZIndex="10"
            Grid.Column="1"
            Grid.Row="3"
            Visibility="{Binding IsBusy, Converter={StaticResource BoolToVis}}"/>

        <DataGrid 
            Name="ItemsDataGridView" 
            ItemsSource="{Binding Inventory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}"
            ColumnHeaderStyle="{StaticResource Header}"
            Style="{StaticResource Default}"
            AutoGenerateColumns="False"
            CanUserDeleteRows="False"
            CanUserAddRows="False"
            IsReadOnly="True"
            BorderThickness="0"
            Padding="0 10 0 0"
            Margin="1 0 1 10"
            GridLinesVisibility="Horizontal"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
            RowHeaderWidth="0"
            ColumnWidth="*"
            SelectionMode="Single"
            SelectionUnit="FullRow"
            FontSize="14"
            Grid.Column="1"
            Grid.Row="3">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction 
                        Command="{Binding EditEntryCommand}"
                        CommandParameter="{Binding ElementName=ItemsDataGridView, Path=SelectedItem}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <DataGrid.Columns>
                <DataGridTextColumn Header=" " Width="5" IsReadOnly="True"/>
                <DataGridTextColumn Header="Product ID" Binding="{Binding Item.ProductId, UpdateSourceTrigger=PropertyChanged}" MaxWidth="100"/>
                <DataGridTextColumn Header="Name" Binding="{Binding Item.Name, UpdateSourceTrigger=PropertyChanged}" MaxWidth="200"/>
                <DataGridTextColumn Header="Location" Binding="{Binding Location, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Type" Binding="{Binding Item.Type, UpdateSourceTrigger=PropertyChanged}" MaxWidth="100"/>
                <DataGridTextColumn Header="Quantity" Binding="{Binding Quantity, UpdateSourceTrigger=PropertyChanged}" MaxWidth="85"/>
                <DataGridTextColumn Header="Price" Binding="{Binding Item.Price, UpdateSourceTrigger=PropertyChanged, StringFormat=F2}" MaxWidth="85"/>
                <DataGridTemplateColumn Width="auto" Header=" ">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Button
                                    Style="{StaticResource EditButton}"
                                    Command="{Binding DataContext.EditEntryCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                    Visibility="{Binding Converter={StaticResource SelectedItemToVis}, ConverterParameter={x:Type vm:InventoryEntryViewModel}}"
                                    CommandParameter="{Binding}"
                                    FontFamily="Wingdings 2"
                                    FontSize="12"
                                    Content="!"/>

                                <Button
                                    Style="{StaticResource DeleteButton}"
                                    Command="{Binding DataContext.DeleteItemCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                    Visibility="{Binding Converter={StaticResource SelectedItemToVis}, ConverterParameter={x:Type vm:InventoryEntryViewModel}}"
                                    CommandParameter="{Binding}"
                                    FontFamily="Marlett"
                                    FontSize="12"
                                    Content="r"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header=" " Width="5" IsReadOnly="True"/>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
